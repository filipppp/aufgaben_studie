const input2 =
    `\\.......\\..//-.............-/....|....../-....|..................................|........--/.................
..|/..-..\\..........\\.....|......\\...-....../...................................................|.../||\\......
....././\\..........-|....|....-..........................\\.......|.............................-/\\............
...........\\..-...\\...................|.......\\/./../...|.....-.|....|.........................|..............
............|-..............-....................-...\\.........|.............-..................\\...|.....//..
.....\\......................./............|..................|...|.............................../...........|
.........-..-...|...\\....-........................../....-.........-|.......|......|....................-.....
............../..../...../..\\..../................../............../..\\.................././......./..........
...-..|.....-./\\...../..../.|..\\.......-........................../.\\.............\\...........................
............|.-..../.............................|......\\.........|......--....-.........-..................|.
..|..\\........../...\\\\............\\........\\-...........-....|.....\\....|..................|../...../.........
....|..-....................-./-...............................|......./........../....|.....\\.|..\\...\\.......
..../......................|.....|...............-..../\\......................-.......\\.......................
............................\\.|.-.|.............-.................................................-...........
...|.-.......................\\|..-......-.................|.......-..\\.......\\-..................|............
.............................\\......................\\.../.\\.|...........\\....|..\\.............................
-.../...|................/.-......./..........|.........|........./||.-.........\\.....\\...-............./.|...
........../......../-.........................................../.......-|.|....................|...|../...../
......|................|............./.......\\.............-..............\\|.......-..\\./...../.-.../....../..
/............|\\........../.......\\......-..|......../-../.........|\\....../............\\.........|...|........
...............-.........|........................../.........\\............-\\....\\......../..................|
................\\.\\................\\....-.......-.....-......|..|...\\/........./...../..|.............|.......
............................................................................................................/.
................................|..-/...................../.....-.............|...-...........................
...................-/..................||./.............|..........|..................-.../..................|
..................\\/...|...\\.-.........../....-......................-\\.......|......./.........|..|.\\..-.....
........................|.-..................-........................./................\\.../...\\...|.........
..................-.........-/.....\\......|...../\\...-......\\....-....................................../.....
.....................|..............\\........\\....\\...............-........../......\\...........\\.............
...\\./......................-.\\..........\\.-..\\........-.................-.......-.||......................./.
...|..............\\..|............\\....|............|.....\\......../...........-...................\\...../../.
.........\\.........................\\.............../........//.................|.........\\.-...............-..
.............\\....-..../..-................./...|/...-...................|../.../.............-......../.....|
-.....||/.......\\......../..............................|...............................................-.....
.......|......\\........../|........................../-........../.\\..\\..............-.......|/|....-.........
../-.............-.\\-........./........-........\\...|...........-.\\./..\\.\\....................................
/.\\................../.....|...........-............-.......-......./.\\.\\..|...........\\......../.............
..............................|.....-...|...\\.......-.........\\..\\-..........-....\\......|...........|/...-...
.......\\......\\\\......-.....-.....-........|../........\\..|.............\\../................../...\\......./..\\
..-.........|............./............./.-.|.....|...../..............................................\\...|..
|......................./......-....-............/.................//...........\\.............-..\\............
............\\.....................-......-..|.\\.......\\/..........\\............/....\\.../.....................
|.............................|........./........................\\.................../.........|........../\\..
.../...|/.-.......-.............\\......................................./........--..................\\........
.\\...........\\..-|............-...-.\\...../...........-..|.............././.................|........../......
...............-......................./..............\\..\\........................\\.............-../..........
................................\\..../..................\\.....................\\............/............./....
...-..../../.......-............-......|...../.........|............................|...../../..............-|
.........|.......-..../..........................................\\|.|./.....-..\\.-.....................|......
............\\............................................|................-...-................\\..............
|...................................-...|/......|............./........./...|...................|....\\........
|......\\-......................./.-.............../.|\\-..|................-.....|../-\\.|.-..-|.........-.|-\\.-
......-......|-......|.................-.-..\\..../-./.............................................|-......./..
.-...............................\\...........................-|.......-.......................................
.............\\.|....|....\\.............../..\\..|..................../.............|...-\\......................
........-.\\/.....................|........-......./............../..............\\..\\.............|......./....
..-....../-..........................|...../..\\...............\\..........-....\\...........|.\\...\\.............
...........|............................................../...................\\.\\.\\...........................
../.................|\\.|.\\..-..\\........\\...-..-........-..\\....-...............-..............\\...........|/.
........\\.|....................../...........//................/.................\\..../.....-.................
.....\\...\\.....\\.......\\......\\.....-|./..|............./|./|-\\.........................-........--...........
..|................../.....\\.....|.......-...|............-../................-...\\........-.......|..\\\\......
.....|......../....\\....../...\\........................................\\..\\..............-..................|.
....//......\\.........-......./.\\..\\........./..........-....-.....\\..-...|...................\\.../......|....
...............|...................../.\\.............-...\\.....\\..|..................../.............\\.....|..
\\.....................-............/.............\\...-...................../...-..-.....|./..............\\....
........................-../......\\.............-........-.\\/.....|.-..........-............../..-....-\\\\..-..
.........../.................\\.....|..../.\\.........|........./...-..........................\\................
|....................../..../.......................-................\\...................................-./..
...|.......\\-.......\\........\\..........-........................./...../.........................-../........
.............\\.......-....-..|...\\..../.-...\\......|....................|..-./...................\\............
...............\\./.\\...............|.............\\./......|...........................-.........../.|.........
...../....../..............|.................../.....|.....\\............................/.\\...../...\\|........
.\\............/......................-......./................-/./.|....................................-.....
.................../.......\\........../-.............................|\\.......................................
../....................\\....../......./.....................................|................-/\\...|..........
\\................/........................--.........../\\....\\../....../..........|-............-.............
./\\..................--......\\..../.....\\.......-..............................|.............-.............\\..
....|.....|...............................\\//.................|..........|.-.........\\................././....
../....-...............-...|...............-...-................./......-..-/...........-....../..........|-..
..........|.|/..............................-./|...|..|......\\............................-...-...|...........
..\\..........................................................-......................../../................-...
.....|\\..........................\\................|................\\.../.......\\..|.\\.........-.......\\.-.....
.......................|..\\..........|.......\\.-.................\\\\........-............|.....................
......./.................|.\\...|............................./\\............\\.....|.....|-...|.....|.......|...
....../...-.........../|...............-.............................\\../...........\\...........|...........|.
..-..................\\....\\/.........|.....\\......................-...........................................
....|.....-................................/.........-|...........\\....\\.-./....\\........................../..
....../........\\................|......\\.......|.................................\\............................
....-......./......./-.../.......\\...........|..............|................................|......|.........
-....................-.............................|......\\......|.........//...........\\........\\............
\\............./...../.....-.......-\\...........-...........\\.|.............-/.....|......|.../................
.......................|/\\..\\............|..|...................../.......-\\........|.....|....\\.....\\...-....
.......-............|........................../..\\.|.................\\...............\\............|...|...|..
......................../..-.......-.......-...-.............\\............-......--..\\..................|...\\.
...............|.|......|.....\\................-.........../.........\\............\\.............-.............
..\\..........................|./......-........|....-.............-.......-.....\\................/............
...../..................................................|......\\..-........|..|.....................\\.....-...
.....\\....|.........|.........|.................../.............\\......|.......|..........\\............./.../.
./.../............../.|....\\./..././...................\\...........|...........-......................\\....\\..
.../..............................-...............................\\.............../..........-.............../
|..\\-.........\\../...........|.\\..........-.........../..........|-...................................-.......
...........................|../.....\\.........................|.....\\........../..............................
..................-..........|.........|....|............../...-..../.............../-........\\\\.\\.......-....
.............---..../....................-....-......../....../.........\\..\\............................../...
|.....|.......................././...............|.../..|.\\............-.................../............./....
..-........\\............./../|..........................--....|..\\.........|/./................/...../........
..........\\|.....................................--............/....../............\\.|......|.......-|......\\.
..........|-........\\....|.....................\\................................-\\...|......../.........\\..|..
..\\\\.........\\..|../................|.........\\.....--...-...\\................/.............................\\.`
const input =
    `.|.\\.
.....
.....
.-.|.
.\\./.`

const beamMatrix = input.split('\n').map(row => row.split(''));
const beamTraces = input.split('\n').map(row => row.split(''));
const visited = beamMatrix.map(row => row.map(() => ({
    fromleft: false,
    fromright: false,
    fromtop: false,
    frombottom: false,
})));

type Coord = {
    row: number,
    col: number
}

function getCurrentSymbol(comesFrom: "bottom" | "top" | "left" | "right" = "bottom") {
    switch (comesFrom) {
        case "top":
            return "v";
        case "bottom":
            return "^";
        case "left":
            return ">";
        case "right":
            return "<";
    }
}

function traceBeam(beam: Coord, comesFrom: "bottom" | "top" | "left" | "right" = "bottom") {
    if (beam.row < 0 || beam.row >= beamMatrix.length || beam.col < 0 || beam.col >= beamMatrix[beam.row].length) return;

    if (visited[beam.row][beam.col][`from${comesFrom}`]) return;
    visited[beam.row][beam.col][`from${comesFrom}`] = true;

    const currentSymbol = beamMatrix[beam.row][beam.col];
    if (!"|\\/-".includes(currentSymbol)) {
        beamTraces[beam.row][beam.col] = getCurrentSymbol(comesFrom);
    }

    if (comesFrom === "top") {
        if (currentSymbol === "|" || currentSymbol === ".") {
            traceBeam({row: beam.row + 1, col: beam.col}, "top");
        } else if (currentSymbol === "-") {
            traceBeam({row: beam.row, col: beam.col + 1}, "left");
            traceBeam({row: beam.row, col: beam.col - 1}, "right");
        } else if (currentSymbol === "\\") {
            traceBeam({row: beam.row, col: beam.col + 1}, "left");
        } else if (currentSymbol === "/") {
            traceBeam({row: beam.row, col: beam.col - 1}, "right");
        }
    } else if (comesFrom === "bottom") {
        if (currentSymbol === "|" || currentSymbol === ".") {
            traceBeam({row: beam.row - 1, col: beam.col}, "bottom");
        } else if (currentSymbol === "-") {
            traceBeam({row: beam.row, col: beam.col + 1}, "left");
            traceBeam({row: beam.row, col: beam.col - 1}, "right");
        } else if (currentSymbol === "/") {
            traceBeam({row: beam.row, col: beam.col + 1}, "left");
        } else if (currentSymbol === "\\") {
            traceBeam({row: beam.row, col: beam.col - 1}, "right");
        }
    } else if (comesFrom === "left") {
        if (currentSymbol === "-" || currentSymbol === ".") {
            traceBeam({row: beam.row, col: beam.col + 1}, "left");
        } else if (currentSymbol === "|") {
            traceBeam({row: beam.row + 1, col: beam.col}, "top");
            traceBeam({row: beam.row - 1, col: beam.col}, "bottom");
        } else if (currentSymbol === "\\") {
            traceBeam({row: beam.row + 1, col: beam.col}, "top");
        } else if (currentSymbol === "/") {
            traceBeam({row: beam.row - 1, col: beam.col}, "bottom");
        }
    } else {
        if (currentSymbol === "-" || currentSymbol === ".") {
            traceBeam({row: beam.row, col: beam.col - 1}, "right");
        } else if (currentSymbol === "|") {
            traceBeam({row: beam.row + 1, col: beam.col}, "top");
            traceBeam({row: beam.row - 1, col: beam.col}, "bottom");
        } else if (currentSymbol === "\\") {
            traceBeam({row: beam.row - 1, col: beam.col}, "bottom");
        } else if (currentSymbol === "/") {
            traceBeam({row: beam.row + 1, col: beam.col}, "top");
        }
    }
}

traceBeam({row: 0, col: 0}, "left");
for (let i = 0; i < visited.length; i++) {
    for (let j = 0; j < visited[i].length; j++) {
        const count = Object.values(visited[i][j]).reduce((acc, val) => acc + (val ? 1 : 0), 0);
        if (count >= 2 && "<^v>".includes(beamTraces[i][j])) {
            beamTraces[i][j] = count + "";
        }
    }
}

console.log(beamTraces.map(row => row.join("")).join("\n"))
console.log(visited.map(row => row.map(cell => cell.fromtop || cell.frombottom || cell.fromright || cell.fromleft ? "#" : ".").join("")).join("\n"));
console.log(visited.reduce((acc, val) => acc + val.reduce((acc, val) => acc + (val.fromtop || val.frombottom || val.fromright || val.fromleft ? 1 : 0), 0), 0));

